testDataBlock2.melt <- melt(testDataBlock2, c("Subject", "IntensityRating", "Running.Block."))
ggplot(data = subset(testDataBlock1.melt, IntensityRating %in% "FishyRating"), aes(x = variable, y = value))+
geom_point(position = position_jitter(w = .1)) +
facet_grid(Subject~.)
ggplot(data = subset(testDataBlock2.melt, IntensityRating %in% "FishyRating"), aes(x = variable, y = value))+
geom_point(position = position_jitter(w = .1)) +
facet_grid(Subject~.)
#The other way to relabel so we can see all the points from one person
nostriltyperelabel <- read.csv("/Volumes/mainland/Projects/TMA\ blocker/Split\ Nostril\ Study/Setup2-Olfactometer/Raw\ Data\ 3-2016/NostrilTypeRelabel.csv")
testDataRename <- merge (testData.melt, nostriltyperelabel)
ggplot(data = subset(testDataRename, IntensityRating == "FishyRating" & Running.Block. == "Test1"), aes(x = OdorType, y = value)) +
geom_point(position = position_jitter(w = .1)) +
facet_grid(.~Subject)
ggplot(data = subset(testDataRename, IntensityRating == "FishyRating" & Running.Block. == "Test1"), aes(x = OdorType, y = value)) +
geom_boxplot +
facet_grid(.~Subject)
ggplot(data = subset(testDataRename, IntensityRating == "FishyRating" & Running.Block. == "Test1"), aes(x = OdorType, y = value)) +
geom_boxplot() +
facet_grid(.~Subject)
ggplot(data = subset(testDataRename, IntensityRating == "FishyRating" & Running.Block. == "Test1" & Subject >=40), aes(x = OdorType, y = value)) +
geom_boxplot() +
facet_grid(.~Subject)
scale01 <- function(value, minValue, maxValue) {
(value - minValue)/(maxValue - minValue)
}
subjMinMax <- ddply(testDataRename, .variables = c("Subject"), .fun = summarize, minValue = min(value), maxValue = max(value))
testDataMinMax <- merge(testDataRename, subjMinMax)
testDataMinMax$normValue <- scale01(testDataMinMax$value, testDataMinMax$minValue, testDataMinMax$maxValue)
testDataMinMax$Running.Block. <- factor(testDataMinMax$Running.Block., levels = c("Test1", "Test2"), labels = c("Nonenol", "Linalool"))
testDataMinMax$OdorType <- factor(testDataMinMax$OdorType, levels = c("TMAAlone", "DifferentNostrils", "SameNostril", "Blank", "AntagAlone"))
ggplot(data = subset(testDataMinMax, IntensityRating == "FishyRating"), aes(x = OdorType, y = normValue)) +
geom_point(position = position_jitter(w = .1))+
facet_grid(.~Running.Block.)
ggplot(data = subset(testDataMinMax, IntensityRating == "FishyRating"), aes(x = OdorType, y = normValue)) +
geom_violin() +
facet_grid(.~Running.Block.)
ggplot(testDataMinMax, aes(x = OdorType, y = normValue)) +
geom_violin() +
facet_grid(IntensityRating ~ Running.Block.) +
xlab("Normalized Intensity Rating") +
ylab("Nostril Type")
ggplot(testDataMinMax, aes(x = OdorType, y = normValue)) +
geom_boxplot() +
facet_grid(IntensityRating ~ Running.Block.) +
xlab("Normalized Intensity Rating") +
ylab("Nostril Type")
testDataAverages <- ddply(testDataMinMax, .variables = c("Running.Block.", "OdorType", "IntensityRating"), .fun = summarize, average = mean(normValue), stdev = sd(normValue), stderror= stdev/sqrt(length(normValue)))
ggplot(testDataAverages, aes(x = OdorType, y = average, fill = OdorType)) +
geom_bar(stat = "identity") +
facet_grid(IntensityRating ~ Running.Block.) +
xlab("Nostril Type") +
ylab("Normalized Intensity Rating") +
geom_errorbar(aes(ymin = average-stderror, ymax = average+stderror), position = "dodge")
ggplot(testDataAverages, aes(x = OdorType, y = average, color = OdorType)) +
geom_boxplot() +
facet_grid(IntensityRating ~ Running.Block.) +
xlab("Nostril Type") +
ylab("Normalized Intensity Rating") +
geom_errorbar(aes(ymin = average-stderror, ymax = average+stderror), position = "dodge")
testDataBlock1 <- ddply(.data = subset(testData.melt, Running.Block. == "Test1"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(AntagAlone = mean(subset(x, (RightType == "Nonenol" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "Nonenol"))$value), TMAAlone = mean(subset(x, (RightType == "TMA" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "TMA"))$value), DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value), Blank= (mean(subset(x, (RightType == "Blank" & LeftType == "Blank"))$value))))
testDataBlock2 <- ddply(.data = subset(testData.melt, Running.Block. == "Test2"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(AntagAlone = mean(subset(x, (RightType == "Linalool" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "Linalool"))$value), TMAAlone = mean(subset(x, (RightType == "TMA" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "TMA"))$value), DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Linalool") | (RightType == "Linalool" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Linalool" | LeftType == "TMA+Linalool"))$value), Blank= (mean(subset(x, (RightType == "Blank" & LeftType == "Blank"))$value))))
testDataBlockmerge <- rbind(testDataBlock1, testDataBlock2)
testDataBlock.sub <- subset(testDataBlockmerge, IntensityRating == "FishyRating", select = c("Subject", "Running.Block.", "TMAAlone"))
testData.cast <- dcast(testDataBlock.sub, ...~Running.Block., value.var = "TMAAlone")
ggplot(testData.cast, aes(x = Test1, y = Test2)) +
geom_point()+
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1)
View(testData.cast)
subset(testDataRename, Subject == 57)
subset(testDataRename, Subject == 57, OdorType == "TMAAlone")
subset(testDataRename, Subject == 57 & OdorType == "TMAAlone")
subset(testDataRename, Subject == 57 & OdorType == "TMAAlone" & IntensityRating == "FishyRating")
subset(testDataRename, Subject == 57 & Running.Block. == "Test1")
subset(df, Subject == 57 & Running.Block. == "Test1")
testData <- subset(df, TestMode == "No" & Procedure.SubTrial. == "ExperimentProc" & Subject !=1 & Subject != 2 & Subject !=57, select = c ("Subject", "Running.Block.", "Trial", "IntensityRatingAntag", "IntensityRatingFishy", "RightType", "LeftType"))
#get the training data from the scale
scaleTrainingData <- subset(df, Procedure.Block. == "ScaleTrainingProc", select = c("Subject", "Procedure.Block.", "ScaleTraining", "Question.Trial.", "IntensityRatingTraining.Trial."))
#get the training data from the smell training (quiz and such)
smellTrainingQuiz <- subset(df, Procedure.Trial. == "training" | Procedure.Trial. == "Quiz", select = c("Subject", "Procedure.Block.", "IntensityRatingTraining.Trial.", "OdorType", "Procedure.Trial.", "Descriptor", "QuizPage.RESP"))
#convert scales (these scales are on a different scale than the previous scales)
#580 is zero on the scale and 80 is the highest
testData$FishyRating  <- 580 - as.integer(testData$IntensityRatingFishy)
testData$AntagRating  <- 580 - as.integer(testData$IntensityRatingAntag)
#make sure the conversion worked - there should be no items coming up in this test
checkConversion <- testData[which(testData$FishyRating < 0 | testData$AntagRating <0),]
#make new labels and averages
testData.sub <- subset(testData, select = c("Subject", "Running.Block.", "Trial","RightType", "LeftType", "FishyRating", "AntagRating"))
testData.melt <- melt(testData.sub, c("Subject", "Running.Block.", "Trial","RightType", "LeftType"), factorsAsStrings = FALSE)
testData.melt$value <- as.double(testData.melt$value)
testData.melt <- rename(testData.melt, c("variable" = "IntensityRating")) #rename variable
testDataBlock1 <- ddply(.data = subset(testData.melt, Running.Block. == "Test1"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(AntagAlone = mean(subset(x, (RightType == "Nonenol" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "Nonenol"))$value), TMAAlone = mean(subset(x, (RightType == "TMA" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "TMA"))$value), DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value), Blank= (mean(subset(x, (RightType == "Blank" & LeftType == "Blank"))$value))))
testDataBlock2 <- ddply(.data = subset(testData.melt, Running.Block. == "Test2"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(AntagAlone = mean(subset(x, (RightType == "Linalool" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "Linalool"))$value), TMAAlone = mean(subset(x, (RightType == "TMA" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "TMA"))$value), DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Linalool") | (RightType == "Linalool" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Linalool" | LeftType == "TMA+Linalool"))$value), Blank= (mean(subset(x, (RightType == "Blank" & LeftType == "Blank"))$value))))
testDataBlock1.melt <- melt(testDataBlock1, c("Subject", "IntensityRating", "Running.Block."))
testDataBlock2.melt <- melt(testDataBlock2, c("Subject", "IntensityRating", "Running.Block."))
ggplot(data = subset(testDataBlock1.melt, IntensityRating %in% "FishyRating"), aes(x = variable, y = value))+
geom_point(position = position_jitter(w = .1)) +
facet_grid(Subject~.)
testData <- subset(df, TestMode == "No" & Procedure.SubTrial. == "ExperimentProc" & Subject !=1 & Subject != 2, select = c ("Subject", "Running.Block.", "Trial", "IntensityRatingAntag", "IntensityRatingFishy", "RightType", "LeftType"))
#get the training data from the scale
scaleTrainingData <- subset(df, Procedure.Block. == "ScaleTrainingProc", select = c("Subject", "Procedure.Block.", "ScaleTraining", "Question.Trial.", "IntensityRatingTraining.Trial."))
#get the training data from the smell training (quiz and such)
smellTrainingQuiz <- subset(df, Procedure.Trial. == "training" | Procedure.Trial. == "Quiz", select = c("Subject", "Procedure.Block.", "IntensityRatingTraining.Trial.", "OdorType", "Procedure.Trial.", "Descriptor", "QuizPage.RESP"))
#convert scales (these scales are on a different scale than the previous scales)
#580 is zero on the scale and 80 is the highest
testData$FishyRating  <- 580 - as.integer(testData$IntensityRatingFishy)
testData$AntagRating  <- 580 - as.integer(testData$IntensityRatingAntag)
#make sure the conversion worked - there should be no items coming up in this test
checkConversion <- testData[which(testData$FishyRating < 0 | testData$AntagRating <0),]
#make new labels and averages
testData.sub <- subset(testData, select = c("Subject", "Running.Block.", "Trial","RightType", "LeftType", "FishyRating", "AntagRating"))
#write.csv(testData.sub, "/Volumes/storage/mainland/Projects/TMA\ blocker/Split\ Nostril\ Study/Setup2-Olfactometer/Code/SplitNostrilSetup_07_2016/SplitNostrilDataSummer2016.csv") #This outputs a file that Sianneh was using to analyze data for MSAP project
# testData.excel <- merge(testData.sub, nostriltyperelabel)
# #this doesn't work #testData.excel.fishy <- subset(testData.excel, select = c("Subject", "Running.Block.", "OdorType", "FishyRating"))
# testData.excel.antagcontrol <- subset(testData.excel, select = c("Subject", "Running.Block.", "OdorType", "FishyRating", "AntagRating"))
# write.csv(testData.excel.antagcontrol, "/Volumes/mainland/Projects/TMA\ blocker/Split\ Nostril\ Study/Setup2-Olfactometer/Code/SplitNostrilSetup_07_2016/SplitNostrilDataSummer2016_FinalDataset.csv")
testData.melt <- melt(testData.sub, c("Subject", "Running.Block.", "Trial","RightType", "LeftType"), factorsAsStrings = FALSE)
testData.melt$value <- as.double(testData.melt$value)
testData.melt <- rename(testData.melt, c("variable" = "IntensityRating")) #rename variable
testDataBlock1 <- ddply(.data = subset(testData.melt, Running.Block. == "Test1"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(AntagAlone = mean(subset(x, (RightType == "Nonenol" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "Nonenol"))$value), TMAAlone = mean(subset(x, (RightType == "TMA" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "TMA"))$value), DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value), Blank= (mean(subset(x, (RightType == "Blank" & LeftType == "Blank"))$value))))
testDataBlock2 <- ddply(.data = subset(testData.melt, Running.Block. == "Test2"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(AntagAlone = mean(subset(x, (RightType == "Linalool" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "Linalool"))$value), TMAAlone = mean(subset(x, (RightType == "TMA" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "TMA"))$value), DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Linalool") | (RightType == "Linalool" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Linalool" | LeftType == "TMA+Linalool"))$value), Blank= (mean(subset(x, (RightType == "Blank" & LeftType == "Blank"))$value))))
testDataBlock1.melt <- melt(testDataBlock1, c("Subject", "IntensityRating", "Running.Block."))
testDataBlock2.melt <- melt(testDataBlock2, c("Subject", "IntensityRating", "Running.Block."))
#make some graphs - then later make some graphs with normalized data - we want to make sure everything looks good first
ggplot(data = subset(testDataBlock1.melt, IntensityRating %in% "FishyRating"), aes(x = variable, y = value))+
geom_point(position = position_jitter(w = .1)) +
facet_grid(Subject~.)
testData <- subset(df, TestMode == "No" & Procedure.SubTrial. == "ExperimentProc" & Subject !=1 & Subject != 2 & Subject !=57, select = c ("Subject", "Running.Block.", "Trial", "IntensityRatingAntag", "IntensityRatingFishy", "RightType", "LeftType"))
#get the training data from the scale
scaleTrainingData <- subset(df, Procedure.Block. == "ScaleTrainingProc", select = c("Subject", "Procedure.Block.", "ScaleTraining", "Question.Trial.", "IntensityRatingTraining.Trial."))
#get the training data from the smell training (quiz and such)
smellTrainingQuiz <- subset(df, Procedure.Trial. == "training" | Procedure.Trial. == "Quiz", select = c("Subject", "Procedure.Block.", "IntensityRatingTraining.Trial.", "OdorType", "Procedure.Trial.", "Descriptor", "QuizPage.RESP"))
#convert scales (these scales are on a different scale than the previous scales)
#580 is zero on the scale and 80 is the highest
testData$FishyRating  <- 580 - as.integer(testData$IntensityRatingFishy)
testData$AntagRating  <- 580 - as.integer(testData$IntensityRatingAntag)
#make sure the conversion worked - there should be no items coming up in this test
checkConversion <- testData[which(testData$FishyRating < 0 | testData$AntagRating <0),]
#make new labels and averages
testData.sub <- subset(testData, select = c("Subject", "Running.Block.", "Trial","RightType", "LeftType", "FishyRating", "AntagRating"))
#write.csv(testData.sub, "/Volumes/storage/mainland/Projects/TMA\ blocker/Split\ Nostril\ Study/Setup2-Olfactometer/Code/SplitNostrilSetup_07_2016/SplitNostrilDataSummer2016.csv") #This outputs a file that Sianneh was using to analyze data for MSAP project
# testData.excel <- merge(testData.sub, nostriltyperelabel)
# #this doesn't work #testData.excel.fishy <- subset(testData.excel, select = c("Subject", "Running.Block.", "OdorType", "FishyRating"))
# testData.excel.antagcontrol <- subset(testData.excel, select = c("Subject", "Running.Block.", "OdorType", "FishyRating", "AntagRating"))
# write.csv(testData.excel.antagcontrol, "/Volumes/mainland/Projects/TMA\ blocker/Split\ Nostril\ Study/Setup2-Olfactometer/Code/SplitNostrilSetup_07_2016/SplitNostrilDataSummer2016_FinalDataset.csv")
testData.melt <- melt(testData.sub, c("Subject", "Running.Block.", "Trial","RightType", "LeftType"), factorsAsStrings = FALSE)
testData.melt$value <- as.double(testData.melt$value)
testData.melt <- rename(testData.melt, c("variable" = "IntensityRating")) #rename variable
testDataBlock1 <- ddply(.data = subset(testData.melt, Running.Block. == "Test1"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(AntagAlone = mean(subset(x, (RightType == "Nonenol" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "Nonenol"))$value), TMAAlone = mean(subset(x, (RightType == "TMA" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "TMA"))$value), DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value), Blank= (mean(subset(x, (RightType == "Blank" & LeftType == "Blank"))$value))))
testDataBlock2 <- ddply(.data = subset(testData.melt, Running.Block. == "Test2"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(AntagAlone = mean(subset(x, (RightType == "Linalool" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "Linalool"))$value), TMAAlone = mean(subset(x, (RightType == "TMA" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "TMA"))$value), DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Linalool") | (RightType == "Linalool" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Linalool" | LeftType == "TMA+Linalool"))$value), Blank= (mean(subset(x, (RightType == "Blank" & LeftType == "Blank"))$value))))
testDataBlock1.melt <- melt(testDataBlock1, c("Subject", "IntensityRating", "Running.Block."))
testDataBlock2.melt <- melt(testDataBlock2, c("Subject", "IntensityRating", "Running.Block."))
#make some graphs - then later make some graphs with normalized data - we want to make sure everything looks good first
ggplot(data = subset(testDataBlock1.melt, IntensityRating %in% "FishyRating"), aes(x = variable, y = value))+
geom_point(position = position_jitter(w = .1)) +
facet_grid(Subject~.)
ggplot(data = subset(testDataBlock2.melt, IntensityRating %in% "FishyRating"), aes(x = variable, y = value))+
geom_point(position = position_jitter(w = .1)) +
facet_grid(Subject~.)
#The other way to relabel so we can see all the points from one person
nostriltyperelabel <- read.csv("/Volumes/mainland/Projects/TMA\ blocker/Split\ Nostril\ Study/Setup2-Olfactometer/Raw\ Data\ 3-2016/NostrilTypeRelabel.csv")
testDataRename <- merge (testData.melt, nostriltyperelabel)
#graph for individuals with all datapoints
ggplot(data = subset(testDataRename, IntensityRating == "FishyRating" & Running.Block. == "Test1"), aes(x = OdorType, y = value)) +
geom_point(position = position_jitter(w = .1)) +
facet_grid(.~Subject)
ggplot(data = subset(testDataRename, IntensityRating == "FishyRating" & Running.Block. == "Test1"), aes(x = OdorType, y = value)) +
geom_boxplot() +
facet_grid(.~Subject)
#just the second half of the participants
ggplot(data = subset(testDataRename, IntensityRating == "FishyRating" & Running.Block. == "Test1" & Subject >=40), aes(x = OdorType, y = value)) +
geom_boxplot() +
facet_grid(.~Subject)
scale01 <- function(value, minValue, maxValue) {
(value - minValue)/(maxValue - minValue)
}
#plan: Find min and max for each participant and then calculate the value using the scale function.
#this is normalizing by scale usage during the experiment, rather than overall scale usage during the trial
#later I can try normalizing by the scale usage from the beginning of the data
#work with testDataRename
subjMinMax <- ddply(testDataRename, .variables = c("Subject"), .fun = summarize, minValue = min(value), maxValue = max(value))
testDataMinMax <- merge(testDataRename, subjMinMax)
testDataMinMax$normValue <- scale01(testDataMinMax$value, testDataMinMax$minValue, testDataMinMax$maxValue)
testDataMinMax$Running.Block. <- factor(testDataMinMax$Running.Block., levels = c("Test1", "Test2"), labels = c("Nonenol", "Linalool"))
testDataMinMax$OdorType <- factor(testDataMinMax$OdorType, levels = c("TMAAlone", "DifferentNostrils", "SameNostril", "Blank", "AntagAlone"))
testDataAverages <- ddply(testDataMinMax, .variables = c("Running.Block.", "OdorType", "IntensityRating"), .fun = summarize, average = mean(normValue), stdev = sd(normValue), stderror= stdev/sqrt(length(normValue)))
ggplot(testDataAverages, aes(x = OdorType, y = average, fill = OdorType)) +
geom_bar(stat = "identity") +
facet_grid(IntensityRating ~ Running.Block.) +
xlab("Nostril Type") +
ylab("Normalized Intensity Rating") +
geom_errorbar(aes(ymin = average-stderror, ymax = average+stderror), position = "dodge")
testDataBlock1 <- ddply(.data = subset(testData.melt, Running.Block. == "Test1"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(AntagAlone = mean(subset(x, (RightType == "Nonenol" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "Nonenol"))$value), TMAAlone = mean(subset(x, (RightType == "TMA" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "TMA"))$value), DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value), Blank= (mean(subset(x, (RightType == "Blank" & LeftType == "Blank"))$value))))
testDataBlock2 <- ddply(.data = subset(testData.melt, Running.Block. == "Test2"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(AntagAlone = mean(subset(x, (RightType == "Linalool" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "Linalool"))$value), TMAAlone = mean(subset(x, (RightType == "TMA" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "TMA"))$value), DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Linalool") | (RightType == "Linalool" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Linalool" | LeftType == "TMA+Linalool"))$value), Blank= (mean(subset(x, (RightType == "Blank" & LeftType == "Blank"))$value))))
testDataBlockmerge <- rbind(testDataBlock1, testDataBlock2)
testDataBlock.sub <- subset(testDataBlockmerge, IntensityRating == "FishyRating", select = c("Subject", "Running.Block.", "TMAAlone"))
testData.cast <- dcast(testDataBlock.sub, ...~Running.Block., value.var = "TMAAlone")
ggplot(testData.cast, aes(x = Test1, y = Test2)) +
geom_point()+
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1)
testData.cast$difference <- abs(testData.cast$Test1 - testData.cast$Test2)
View(testData.cast)
testData.cast$Subject[,which(difference > 90)]
testData.cast$Subject[,which(testData.cast$difference > 90)]
testData.cast$Subject[which(testData.cast$difference > 90)]
testData.cast$Subject[which(testData.cast$difference > 90)]
View(testData)
View(testDataRename)
norm_toBlank <- ddply(testDataRename, .variables = c("Subject","Running.Block.", "IntensityRating"), function(x) c(BlankAvg = mean(subset(x, OdorType == Blank)$value), norm_toBlank = value - BlankAvg)
norm_toBlank <- ddply(testDataRename, .variables = c("Subject","Running.Block.", "IntensityRating"), function(x) c(BlankAvg = mean(subset(x, OdorType == Blank)$value), norm_toBlank = value - BlankAvg))
norm_toBlank <- ddply(testDataRename, .variables = c("Subject","Running.Block.", "IntensityRating"), function(x) BlankAvg = mean(subset(x, OdorType == Blank)$value))
norm_toBlank <- ddply(testDataRename, .variables = c("Subject","Running.Block.", "IntensityRating"), function(x) BlankAvg = mean(subset(x, OdorType == "Blank")$value))
View(norm_toBlank)
norm_toBlank <- ddply(testDataRename, .variables = c("Subject","Running.Block.", "IntensityRating"), function(x) c(BlankAvg = mean(subset(x, OdorType == "Blank")$value), value = x$value)
norm_toBlank <- ddply(testDataRename, .variables = c("Subject","Running.Block.", "IntensityRating"), function(x) c(BlankAvg = mean(subset(x, OdorType == "Blank")$value), value = x$value))
norm_toBlank <- ddply(testDataRename, .variables = c("Subject","Running.Block.", "IntensityRating"), function(x) c(BlankAvg = mean(subset(x, OdorType == "Blank")$value), value = x$value))
norm_toBlank <- ddply(testDataRename, .variables = c("Subject","Running.Block.", "IntensityRating"), function(x) c(BlankAvg = mean(subset(x, OdorType == "Blank")$value))
norm_toBlank <- ddply(testDataRename, .variables = c("Subject","Running.Block.", "IntensityRating"), function(x) c(BlankAvg = mean(subset(x, OdorType == "Blank")$value)))
norm_toBlank <- ddply(testDataRename, .variables = c("Subject","Running.Block.", "IntensityRating"), function(x) c(BlankAvg = mean(subset(x, OdorType == "Blank")$value)))
rm(norm_toBlank)
BlankAvg <- ddply(testDataRename, .variables = c("Subject","Running.Block.", "IntensityRating"), function(x) c(BlankAvg = mean(subset(x, OdorType == "Blank")$value)))
testData_blankAvg <- merge(testData, BlankAvg)
View(testData_blankAvg)
testData_blankAvg <- merge(testDataRename, BlankAvg)
testData_blankAvg$norm_toBlank <- testData_blankAvg$IntensityRating - testData_blankAvg$BlankAvg
testData_blankAvg$norm_toBlank <- as.numeric(testData_blankAvg$IntensityRating) - as.numeric(testData_blankAvg$BlankAvg)
testData_blankAvg$norm_toBlank <- testData_blankAvg$value - testData_blankAvg$BlankAvg
subjMinMax_normToBlank <- ddply(testData_blankAvg, .variables = c("Subject"), .fun = summarize, minValue = min(norm_toBlank), maxValue = max(norm_toBlank))
testDataMinMax_normToBlank <- merge(testDataRename_blankAvg, subjMinMax_normToBlank)
testDataMinMax_normToBlank$normValue <- scale01(testDataMinMax_normToBlank$value, testDataMinMax_normToBlank$minValue, testDataMinMax_normToBlank$maxValue)
testDataMinMax_normToBlank <- merge(testDataRename_blankAvg, subjMinMax_normToBlank)
testDataMinMax_normToBlank <- merge(testData_blankAvg, subjMinMax_normToBlank)
testDataMinMax_normToBlank$normValue <- scale01(testDataMinMax_normToBlank$value, testDataMinMax_normToBlank$minValue, testDataMinMax_normToBlank$maxValue)
testDataMinMax_normToBlank$Running.Block. <- factor(testDataMinMax_normToBlank$Running.Block., levels = c("Test1", "Test2"), labels = c("Nonenol", "Linalool"))
testDataMinMax_normToBlank$OdorType <- factor(testDataMinMax_normToBlank$OdorType, levels = c("TMAAlone", "DifferentNostrils", "SameNostril", "Blank", "AntagAlone"))
ggplot(testDataMinMax, aes(x = OdorType, y = normValue)) +
geom_boxplot() +
facet_grid(IntensityRating ~ Running.Block.) +
xlab("Normalized Intensity Rating") +
ylab("Nostril Type")
View(testDataMinMax_normToBlank)
ggplot(testDataMinMax_normToBlank, aes(x = OdorType, y = normValue)) +
geom_boxplot() +
facet_grid(IntensityRating ~ Running.Block.) +
xlab("Normalized Intensity Rating") +
ylab("Nostril Type")
testDataMinMax_normToBlank$normValue <- scale01(testDataMinMax_normToBlank$norm_toBlank, testDataMinMax_normToBlank$minValue, testDataMinMax_normToBlank$maxValue)
testDataMinMax_normToBlank$Running.Block. <- factor(testDataMinMax_normToBlank$Running.Block., levels = c("Test1", "Test2"), labels = c("Nonenol", "Linalool"))
testDataMinMax_normToBlank$OdorType <- factor(testDataMinMax_normToBlank$OdorType, levels = c("TMAAlone", "DifferentNostrils", "SameNostril", "Blank", "AntagAlone"))
#graph it!
ggplot(testDataMinMax_normToBlank, aes(x = OdorType, y = normValue)) +
geom_boxplot() +
facet_grid(IntensityRating ~ Running.Block.) +
xlab("Normalized Intensity Rating") +
ylab("Nostril Type")
testDataMinMax_normToBlank$normValue <- scale01(testDataMinMax_normToBlank$norm_toBlank, testDataMinMax_normToBlank$minValue, testDataMinMax_normToBlank$maxValue)
subjMinMax_normToBlank <- ddply(testData_blankAvg, .variables = c("Subject"), .fun = summarize, minValue = min(norm_toBlank), maxValue = max(norm_toBlank))
testDataMinMax_normToBlank <- merge(testData_blankAvg, subjMinMax_normToBlank)
testDataMinMax_normToBlank$normValue <- scale01(testDataMinMax_normToBlank$norm_toBlank, testDataMinMax_normToBlank$minValue, testDataMinMax_normToBlank$maxValue)
testDataMinMax_normToBlank$Running.Block. <- factor(testDataMinMax_normToBlank$Running.Block., levels = c("Test1", "Test2"), labels = c("Nonenol", "Linalool"))
testDataMinMax_normToBlank$OdorType <- factor(testDataMinMax_normToBlank$OdorType, levels = c("TMAAlone", "DifferentNostrils", "SameNostril", "Blank", "AntagAlone"))
ggplot(testDataMinMax_normToBlank, aes(x = OdorType, y = normValue)) +
geom_boxplot() +
facet_grid(IntensityRating ~ Running.Block.) +
xlab("Normalized Intensity Rating") +
ylab("Nostril Type")
View(testDataBlock1.melt)
View(testDataBlock1)
View(testDataBlock1)
ggplot(data = subset(testDataBlock1, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point()
#Import Libraries
library(reshape2)
library(ggplot2)
library(plyr)
ggplot(data = subset(testDataBlock1, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point()
ggplot(data = subset(testDataBlock1, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
#xlim(0,200) +
#ylim(0,200) +
geom_abline(a=1, b=1)
ggplot(data = subset(testDataBlock2, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
#xlim(0,200) +
#ylim(0,200) +
geom_abline(a=1, b=1)
ggplot(data = subset(testDataBlock2, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1)
ggplot(data = subset(testDataBlock1, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1)
testDataBlock1.unityline <- ddply(.data = subset(testData.melt, Running.Block. == "Test1"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(TMAAlone = DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value)))
testDataBlock1.unityline <- ddply(.data = subset(testData.melt, Running.Block. == "Test1"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value)))
testDataBlock2.unityline <- ddply(.data = subset(testData.melt, Running.Block. == "Test2"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Linalool") | (RightType == "Linalool" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Linalool" | LeftType == "TMA+Linalool"))$value)))
testDataBlock1.unityline <- ddply(.data = subset(testData.melt, Running.Block. == "Test1"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value), DifferentNostrils = sd(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value/2), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value/2)))
View(testDataBlock1.unityline)
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE))
ggplot(data = subset(testDataBlock1.unityline, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE))
testDataBlock1.unityline <- ddply(.data = subset(testData.melt, Running.Block. == "Test1"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value), DifferentNostrilsSE = sd(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value/2), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value), SameNostrilSE= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value/2)))
ggplot(data = subset(testDataBlock1.unityline, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE))
testData.cast <- dcast(testDataBlock.sub, ...~Running.Block., value.var = "TMAAlone")
ggplot(testData.cast, aes(x = Test1, y = Test2)) +
geom_point()+
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1)
ggplot(data = subset(testDataBlock1, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1)
ggplot(data = subset(testDataBlock1.unityline, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE))
?geom_label
?geom_label
ggplot(data = subset(testDataBlock1.unityline, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE)) +
geom_text(aes(label = Subject))
View(testData.sub)
View(testDataRename)
nostriltyperelabel <- read.csv("/Volumes/mainland/Projects/TMA\ blocker/Split\ Nostril\ Study/Setup2-Olfactometer/Raw\ Data\ 3-2016/NostrilTypeRelabel.csv")
testDataRename <- merge (testData.melt, nostriltyperelabel)
View(testDataRename)
right.unityline <- ddply(.data = subset(testDataRename, Running.Block. == "Test1" & RightNostril == 1), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value), DifferentNostrilsSE = sd(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value/2), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value), SameNostrilSE= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value/2)))
left.unityline <- ddply(.data = subset(testDataRename, Running.Block. == "Test1" & LeftNostril == 1), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value), DifferentNostrilsSE = sd(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value/2), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value), SameNostrilSE= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value/2)))
ggplot(data = subset(right.unityline, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE)) +
geom_text(aes(label = Subject))
ggplot(data = subset(left.unityline, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE)) +
geom_text(aes(label = Subject))
subjMinMax <- ddply(testDataRename, .variables = c("Subject"), .fun = summarize, minValue = min(value), maxValue = max(value))
testDataMinMax <- merge(testDataRename, subjMinMax)
testDataMinMax$normValue <- scale01(testDataMinMax$value, testDataMinMax$minValue, testDataMinMax$maxValue)
testDataMinMax$Running.Block. <- factor(testDataMinMax$Running.Block., levels = c("Test1", "Test2"), labels = c("Nonenol", "Linalool"))
testDataMinMax$OdorType <- factor(testDataMinMax$OdorType, levels = c("TMAAlone", "DifferentNostrils", "SameNostril", "Blank", "AntagAlone"))
View(testDataMinMax)
ggplot(subset(testDataMinMax, RightNostril == 1), aes(x = OdorType, y = normValue)) +
geom_boxplot() +
facet_grid(IntensityRating ~ Running.Block.) +
xlab("Normalized Intensity Rating") +
ylab("Nostril Type")
ggplot(subset(testDataMinMax, LeftNostril == 1), aes(x = OdorType, y = normValue)) +
geom_boxplot() +
facet_grid(IntensityRating ~ Running.Block.) +
xlab("Normalized Intensity Rating") +
ylab("Nostril Type")
ggplot(data = subset(right.unityline, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE)) +
geom_text(aes(label = Subject))
TMA.rightVleft <- subset(testDataMinMax, IntensityRating == "FishyRating" & OdorType == "TMAAlone")
View(TMA.rightVleft)
TMA.rightVleft <- subset(testDataAverages, IntensityRating == "FishyRating" & OdorType == "TMAAlone")
View(testDataAverages)
View(testDataBlock1)
TMA.rightVleft <- subset(testDataMinMax, IntensityRating == "FishyRating" & OdorType == "TMAAlone")
TMA.rightVleft <- subset(testDataMinMax, IntensityRating == "FishyRating" & OdorType == "TMAAlone" & select = c("Subject", "RightNostril", "Value"))
TMA.rightVleft <- subset(testDataMinMax, IntensityRating == "FishyRating" & OdorType == "TMAAlone", select = c("Subject", "RightNostril", "Value"))
TMA.rightVleft <- subset(testDataMinMax, IntensityRating == "FishyRating" & OdorType == "TMAAlone", select = c("Subject", "RightNostril", "value"))
?dcast
TMA.rightVleft_cast <- dcast(TMA.rightVleft, Subject~RightNostril, value.var = "value")
TMA.rightVleft_cast <- dcast(TMA.rightVleft, Subject~RightNostril, fun.aggregate = mean, value.var = "value")
View(TMA.rightVleft_cast)
TMA.rightVleft <- subset(testDataMinMax, IntensityRating == "FishyRating" & OdorType == "TMAAlone", select = c("Subject", "RightType", "value"))
TMA.rightVleft_cast <- dcast(TMA.rightVleft, Subject~RightType, fun.aggregate = mean, value.var = "value")
TMA.rightVleft_cast(names) <- c("Subject", "LeftNostril", "RightNostril")
names(TMA.rightVleft_cast) <- c("Subject", "LeftNostril", "RightNostril")
ggplot(TMA.rightVleft_cast, aes(x = LeftNostril, y = RightNostril)) +
geom_point()+
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE)) +
geom_text(aes(label = Subject))
ggplot(TMA.rightVleft_cast, aes(x = LeftNostril, y = RightNostril)) +
geom_point()+
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1) +
geom_text(aes(label = Subject))
View(TMA.rightVleft)
TMA.rightVleft <- subset(testDataMinMax, IntensityRating == "FishyRating" & OdorType == "TMAAlone") #, select = c("Subject", "RightType", "value"))
View(TMA.rightVleft)
TMA.rightVleft <- subset(testDataMinMax, IntensityRating == "FishyRating" & OdorType == "TMAAlone", select = c("Subject", "RightType", "value"))
ggplot(data = subset(testDataBlock1, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1)
library(ggplot2)
ggplot(data = subset(testDataBlock1, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1)
ggplot(data = subset(testDataBlock2, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1)
ggplot(data = subset(testDataBlock1.unityline, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,200) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE)) +
geom_text(aes(label = Subject))
View(testDataBlock1.unityline)
ggplot(data = subset(testDataBlock1.unityline, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,210) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE)) +
geom_text(aes(label = Subject))
ggplot(data = subset(testDataBlock1.unityline, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,200) +
ylim(0,220) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE)) +
geom_text(aes(label = Subject))
ggplot(data = subset(testDataBlock1.unityline, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,250) +
ylim(0,250) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE)) +
geom_text(aes(label = Subject))
ggplot(data = subset(testDataBlock1.unityline, IntensityRating == "FishyRating"), aes(x = DifferentNostrils, y = SameNostril, colour = Subject)) +
geom_point() +
xlim(0,230) +
ylim(0,230) +
geom_abline(a=1, b=1) +
geom_errorbar(aes(ymin = SameNostril - SameNostrilSE, ymax = SameNostril + SameNostrilSE)) +
geom_text(aes(label = Subject))
#clean up data and get things moving
#Import Libraries
library(reshape2)
library(ggplot2)
library(plyr)
#read all files from directory
subj <- dir(path = "/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup2-Olfactometer/Code/SplitNostrilSetup_07_2016/DataPilot2/", pattern="\\.txt$", full.names=TRUE)# creating a list of all file names
names(subj)  <- basename(subj)
df  <- ldply(subj, read.delim, stringsAsFactors=FALSE)
testData <- subset(df, TestMode == "No" & Procedure.SubTrial. == "ExperimentProc" & Subject !=1 & Subject != 2 & Subject !=57, select = c ("Subject", "Running.Block.", "Trial", "IntensityRatingAntag", "IntensityRatingFishy", "RightType", "LeftType"))
#Subjects 1 and 2 were Sianneh and Yusuke so can't be used, subject 57 somehow only got half of the test (Linalool block) so data was removed
#580 is zero on the scale and 80 is the highest
testData$FishyRating  <- 580 - as.integer(testData$IntensityRatingFishy)
testData$AntagRating  <- 580 - as.integer(testData$IntensityRatingAntag)
testData.sub <- subset(testData, select = c("Subject", "Running.Block.", "Trial","RightType", "LeftType", "FishyRating", "AntagRating"))
testData.melt <- melt(testData.sub, c("Subject", "Running.Block.", "Trial","RightType", "LeftType"), factorsAsStrings = FALSE)
testData.melt$value <- as.double(testData.melt$value)
testData.melt <- rename(testData.melt, c("variable" = "IntensityRating")) #rename variable
#make dfs with averages
testDataBlock1 <- ddply(.data = subset(testData.melt, Running.Block. == "Test1"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(AntagAlone = mean(subset(x, (RightType == "Nonenol" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "Nonenol"))$value), TMAAlone = mean(subset(x, (RightType == "TMA" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "TMA"))$value), DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Nonenol") | (RightType == "Nonenol" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Nonenol" | LeftType == "TMA+Nonenol"))$value), Blank= (mean(subset(x, (RightType == "Blank" & LeftType == "Blank"))$value))))
testDataBlock2 <- ddply(.data = subset(testData.melt, Running.Block. == "Test2"), .variables = c("Subject", "IntensityRating", "Running.Block."), function(x) c(AntagAlone = mean(subset(x, (RightType == "Linalool" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "Linalool"))$value), TMAAlone = mean(subset(x, (RightType == "TMA" & LeftType == "Blank") | (RightType == "Blank" & LeftType == "TMA"))$value), DifferentNostrils = mean(subset(x, (RightType == "TMA" & LeftType == "Linalool") | (RightType == "Linalool" & LeftType == "TMA"))$value), SameNostril= mean(subset(x, (RightType == "TMA+Linalool" | LeftType == "TMA+Linalool"))$value), Blank= (mean(subset(x, (RightType == "Blank" & LeftType == "Blank"))$value))))
testDataBlock1.melt <- melt(testDataBlock1, c("Subject", "IntensityRating", "Running.Block."))
testDataBlock2.melt <- melt(testDataBlock2, c("Subject", "IntensityRating", "Running.Block."))
nostriltyperelabel <- read.csv("/Volumes/mainland/Projects/TMA\ blocker/Split\ Nostril\ Study/Setup2-Olfactometer/Raw\ Data\ 3-2016/NostrilTypeRelabel.csv")
testDataRename <- merge (testData.melt, nostriltyperelabel)
```
testDataRename <- merge (testData.melt, nostriltyperelabel)
ggplot(data = subset(testDataRename, IntensityRating == "FishyRating" & Running.Block. == "Test1"), aes(x = OdorType, y = value)) +
geom_boxplot(position = position_jitter(w = .1)) +
facet_grid(.~Subject)
warnings()
ggplot(data = subset(testDataRename, IntensityRating == "FishyRating" & Running.Block. == "Test1"), aes(x = OdorType, y = value)) +
geom_boxplot(position = position_jitter(w = .1)) +
facet_grid(.~Subject)
ggplot(data = subset(testDataRename, IntensityRating == "FishyRating" & Running.Block. == "Test1"), aes(x = OdorType, y = value)) +
geom_boxplot() +
facet_grid(.~Subject)
