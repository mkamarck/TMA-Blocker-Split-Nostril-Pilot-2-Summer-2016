{
    "contents" : "#This analyzes the participant data\n\n#Import Libraries\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(plyr)\n\n#function for normalization between 0 and 1\n#scale01 <- function(x){(x-min(x))/(max(x)-min(x))}\n\n#read all files from directory\n#If this isn't coming up change mainland to mainland-1\nsubj <- dir(path = \"/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup2-Olfactometer/Raw Data/real data/\", pattern=\"\\\\.txt$\", full.names=TRUE)# creating a list of all file names\nnames(subj)  <- basename(subj)\ndf  <- ldply(subj, read.delim, stringsAsFactors=FALSE)\n\n#eliminate trials that were bad\ndf.eliminate <- subset(df, Subject==2 | Subject ==8 | (Subject == 3 & Trial == 2) | (Subject == 14 & Running.Block. == \"Test2\" & Trial == 6) | (Subject == 15 & Running.Block. == \"Test1\" & Trial == 1) | (Subject == 16 & Running.Block. == \"Test1\" & Trial == 11) | (Subject == 16 & Running.Block. == \"Test2\" & Trial == 14) | (Subject == 18 & Running.Block. == \"Test2\" & Trial == 5) | (Subject == 19 & Running.Block. == \"Test1\" & Trial == 15) | (Subject == 23 & Running.Block. == \"Test1\" & Trial == 18) | (Subject == 1 & Running.Block. == \"Test1\" & Trial == 1)   )\ndf.clean <- df[!(row.names(df) %in% row.names(df.eliminate)),]\n\n#subset data\nnumParticipants <- length(unique(df.clean$Subject))\ndfSubset <- subset(df.clean, TestMode == \"No\" & Procedure.SubTrial. == \"ExperimentProc\", select = c (\"Subject\", \"Running.Block.\", \"Trial\", \"IntensityRatingAntag\", \"IntensityRatingFishy\", \"RightType\", \"LeftType\"))\n\n\n#convert scales (these scales are on a different scale than the previous scales)\n#580 is zero on the scale and 80 is the highest\ndfSubset$FishyRating  <- 580 - as.integer(dfSubset$IntensityRatingFishy)\ndfSubset$AntagRating  <- 580 - as.integer(dfSubset$IntensityRatingAntag)\n\n#make sure the conversion worked - there should be no items coming up in this test\ntest <- dfSubset[which(dfSubset$FishyRating < 0 | dfSubset$AntagRating <0),]\n\n#normalizedData <- ddply(dfSubset, .variables = c(\"Subject\", \"Running.Block.\"), function(x) c(FishyRatingNorm = scale01(x$FishyRating), AntagRatingNorm = scale01(x$AntagRating)))\nnormalizedData <- ddply(dfSubset, .variables = c(\"Subject\", \"Running.Block.\"), transform, FishyRatingNorm = scale(FishyRating), AntagRatingNorm = scale(AntagRating))\n#try normalization with and without by \"Running.Block.\"\n#we could also normalize it just to the fishy scale and by block or not by block - this would show us the biggest difference in fishy values. \n\ndf.melt <- melt(normalizedData, c(\"Subject\", \"Running.Block.\", \"Trial\",\"RightType\", \"LeftType\"), factorsAsStrings = FALSE)\n\ndf.melt$value <- as.double(df.melt$value)\n\ndfFishyRatingBlock1 <- ddply(.data = subset(df.melt, Running.Block. == \"Test1\"), .variables = c(\"Subject\", \"variable\", \"Running.Block.\"), function(x) c(AntagAlone = mean(subset(x, (RightType == \"Nonenol\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"Nonenol\"))$value), TMAAlone = mean(subset(x, (RightType == \"TMA\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"TMA\"))$value), DifferentNostrils = mean(subset(x, (RightType == \"TMA\" & LeftType == \"Nonenol\") | (RightType == \"Nonenol\" & LeftType == \"TMA\"))$value), SameNostril= mean(subset(x, (RightType == \"TMA+Nonenol\" | LeftType == \"TMA+Nonenol\"))$value), Blank= (mean(subset(x, (RightType == \"Blank\" & LeftType == \"Blank\"))$value))))\ndfFishyRatingBlock2 <- ddply(.data = subset(df.melt, Running.Block. == \"Test2\"), .variables = c(\"Subject\", \"variable\", \"Running.Block.\"), function(x) c(AntagAlone = mean(subset(x, (RightType == \"Linalool\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"Linalool\"))$value), TMAAlone = mean(subset(x, (RightType == \"TMA\" & LeftType == \"Blank\") | (RightType == \"Blank\" & LeftType == \"TMA\"))$value), DifferentNostrils = mean(subset(x, (RightType == \"TMA\" & LeftType == \"Linalool\") | (RightType == \"Linalool\" & LeftType == \"TMA\"))$value), SameNostril= mean(subset(x, (RightType == \"TMA+Linalool\" | LeftType == \"TMA+Linalool\"))$value), Blank= (mean(subset(x, (RightType == \"Blank\" & LeftType == \"Blank\"))$value))))\n\ndfCombo <- rbind(dfFishyRatingBlock1, dfFishyRatingBlock2)\nRawData <- subset(dfCombo, variable %in% c(\"FishyRating\", \"AntagRating\"))\nRawData.melt <- melt(RawData, c(\"Subject\", \"variable\", \"Running.Block.\"))\nnames(RawData.melt) <- c(\"Subject\", \"RatingType\", \"Block\", \"variable\", \"value\")\n#plot individual data - raw (before normalization)\n#pdf(\"individualRawData.pdf\", width = 8.5, height = 11)\nggplot(data = RawData.melt, aes(x = variable, y = value, color = RatingType))+\n  geom_point(position = position_jitter(w = .1, h = .1)) +\n  facet_grid(Subject~Block)\n#dev.off()\n\n#plot inddividiaul data after normalization\nnormData <- subset(dfCombo, variable %in% c(\"FishyRatingNorm\", \"AntagRatingNorm\"))\nnormData.melt <- melt(normData, c(\"Subject\", \"variable\", \"Running.Block.\"))\nnames(normData.melt) <- c(\"Subject\", \"RatingType\", \"Block\", \"variable\", \"value\")\nggplot(data = normData.melt, aes(x = variable, y = value, color = RatingType))+\n  geom_point(position = position_jitter(w = .1, h = .1)) +\n#  facet_grid(Subject~Block)\n  facet_grid(.~Block) +\n  geom_boxplot()\n\nggplot(data = subset(normData.melt, Subject %in% c(1:7)), aes(x = variable, y = value, color = RatingType)) +\n  geom_boxplot() +\n  facet_grid(.~Block)+ \n  geom_point(position = position_jitter(w = .1, h = .1))\n\n\n#look at just the difference in fishy between same nostril and different nostril\n#look at intensity of green and linalool and see if we can normalize by this\n  #Like maybe what percent of the total intensity rating is fishy? \n#relabel the antagonist so that we can get a scatter of points instead of an average\n#examine left and right nostrils separately\n#look at fishy first versus fruitloops first\n#could also subtract fishy rating of blank from fishy rating \n\n##############################################################\n#start with dfSubset\n#df.nostrilTypes <- read.csv(\"/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup2-Olfactometer/Raw Data/NostrilTypeRelabel.csv\", header = TRUE)\ndf.nostrilTypes <- read.csv(\"/Volumes/mainland/Projects/TMA blocker/Split Nostril Study/Setup2-Olfactometer/Raw Data/NostrilTypeRelabelForAntags.csv\", header = TRUE) #This way of setting up the different nostrils makes more sense for the normalization by antag that I'm trying at the bottom here\n\ndf.relabeled <- merge(dfSubset, df.nostrilTypes, sort = F)\n#melt it\nrelabeled.melt <- melt(df.relabeled, c(\"Subject\", \"Running.Block.\", \"Trial\",\"RightType\", \"LeftType\", \"OdorType\", \"RightNostril\", \"LeftNostril\"), factorsAsStrings = FALSE)\nrelabeled.melt$value <- as.double(relabeled.melt$value)\n\n#all datapoints for individual subjects\nggplot(data = subset(relabeled.melt, variable %in% c(\"FishyRating\", \"AntagRating\")), aes(x = OdorType, y = value, color = variable))+\n  geom_point(position = position_jitter(w = .1, h = .1)) +\n  facet_grid(Subject~Running.Block.)\n\n#all datapoints for individual subjects split up by left and right nostril\n#pdf(\"individualDatabyNostril.pdf\", width = 11, height = 8.5)\nggplot(data = subset(relabeled.melt, variable == \"FishyRating\"), aes(x = OdorType, y = value, color = factor(RightNostril)))+\n  geom_point(position = position_jitter(w = .1, h = .1)) +\n  facet_grid(Subject~Running.Block.)\n#dev.off()\n\n#normalize data and do it by different nostrils - not sure how to handle blanks yet...\nrelabeled.norm <- ddply(df.relabeled, .variables = c(\"Subject\", \"RightNostril\", \"Running.Block.\"), transform, FishyRatingNorm = scale(FishyRating), AntagRatingNorm = scale(AntagRating))\nrelabeled.meltnorm <- melt(relabeled.norm, c(\"Subject\", \"Running.Block.\", \"Trial\",\"RightType\", \"LeftType\", \"OdorType\", \"RightNostril\", \"LeftNostril\"), factorsAsStrings = FALSE)\nrelabeled.meltnorm$value <- as.double(relabeled.meltnorm$value)\n\nggplot(data = subset(relabeled.meltnorm, variable == \"FishyRatingNorm\"), aes(x = OdorType, y = value, color = factor(RightNostril)))+\n  geom_point(position = position_jitter(w = .1, h = .1)) +\n  facet_grid(Subject~Running.Block.)\n\n##########################################\n#look at differences\nleftDifference <- ddply(.data = subset(df.relabeled, LeftNostril == \"1\"), .variables = c(\"Subject\", \"Running.Block.\"), function(x) c(CentralBlock = mean(subset(x, OdorType == \"TMAAlone\")$FishyRating) - mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRating), PeripheralBlock = mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRating) - mean(subset(x, OdorType == \"SameNostril\")$FishyRating)  ))\nrightDifference <- ddply(.data = subset(df.relabeled, RightNostril == \"1\"), .variables = c(\"Subject\", \"Running.Block.\"), function(x) c(CentralBlock = mean(subset(x, OdorType == \"TMAAlone\")$FishyRating) - mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRating), PeripheralBlock = mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRating) - mean(subset(x, OdorType == \"SameNostril\")$FishyRating)  ))\nleftDifference$Nostril <- \"Left\"\nrightDifference$Nostril <- \"Right\"\n\ndifferenceByNostril <- rbind(leftDifference, rightDifference)\nbyNostril.melt <- melt(differenceByNostril, c(\"Subject\", \"Running.Block.\", \"Nostril\"))\nbyNostril.melt$Block <- factor(byNostril.melt$Running.Block., levels = c(\"Test1\", \"Test2\"), labels = c(\"Green\", \"FruitLoops\") )\nggplot(byNostril.melt, aes(x = variable, y = value, colour = Block)) +\n  #geom_point() +\n  #facet_grid(Subject~Nostril)\n  geom_boxplot() +\n  facet_grid(Nostril~.)\n\n#try this normalized \nleftDifferenceNorm <- ddply(.data = subset(relabeled.norm, LeftNostril == \"1\"), .variables = c(\"Subject\", \"Running.Block.\"), function(x) c(CentralBlock = mean(subset(x, OdorType == \"TMAAlone\")$FishyRatingNorm) - mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRatingNorm), PeripheralBlock = mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRatingNorm) - mean(subset(x, OdorType == \"SameNostril\")$FishyRatingNorm)  ))\nrightDifferenceNorm <- ddply(.data = subset(relabeled.norm, RightNostril == \"1\"), .variables = c(\"Subject\", \"Running.Block.\"), function(x) c(CentralBlock = mean(subset(x, OdorType == \"TMAAlone\")$FishyRatingNorm) - mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRatingNorm), PeripheralBlock = mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRatingNorm) - mean(subset(x, OdorType == \"SameNostril\")$FishyRatingNorm)  ))\nleftDifferenceNorm$Nostril <- \"Left\"\nrightDifferenceNorm$Nostril <- \"Right\"\n\ndifferenceByNostrilNorm <- rbind(leftDifferenceNorm, rightDifferenceNorm)\nbyNostrilNorm.melt <- melt(differenceByNostrilNorm, c(\"Subject\", \"Running.Block.\", \"Nostril\"))\nbyNostrilNorm.melt$Block <- factor(byNostrilNorm.melt$Running.Block., levels = c(\"Test1\", \"Test2\"), labels = c(\"Green\", \"FruitLoops\") )\n#pdf(\"normbyNostrilandBlock.pdf\")\nggplot(byNostrilNorm.melt, aes(x = variable, y = value, colour = Block)) +\n  #geom_point() +\n  #facet_grid(Subject~Nostril)\n  geom_boxplot() +\n  facet_grid(Nostril~.)\n#dev.off()\n\n########################################\n#try to normalize by the intensity of the antagonist \n#take the raw data per subject by nostril and find the means of the ratings, then take the difference for central and peripheral, then divide by the rating of the antagonist\n#first we should see if this makes sense - we should see if the amount of blocking correlates with the intensity of the antagonist. \nleftDifference <- ddply(.data = subset(df.relabeled, LeftNostril == \"1\"), .variables = c(\"Subject\", \"Running.Block.\"), function(x) c(CentralBlock = mean(subset(x, OdorType == \"TMAAlone\")$FishyRating) - mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRating), PeripheralBlock = mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRating) - mean(subset(x, OdorType == \"SameNostril\")$FishyRating), AvgAntagAlone = mean(subset(x, OdorType == \"AntagAlone\")$AntagRating), TotalBlock = mean(subset(x, OdorType == \"TMAAlone\")$FishyRating) - mean(subset(x, OdorType == \"SameNostril\")$FishyRating)  ))\nrightDifference <- ddply(.data = subset(df.relabeled, RightNostril == \"1\"), .variables = c(\"Subject\", \"Running.Block.\"), function(x) c(CentralBlock = mean(subset(x, OdorType == \"TMAAlone\")$FishyRating) - mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRating), PeripheralBlock = mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRating) - mean(subset(x, OdorType == \"SameNostril\")$FishyRating), AvgAntagAlone = mean(subset(x, OdorType == \"AntagAlone\")$AntagRating), TotalBlock = mean(subset(x, OdorType == \"TMAAlone\")$FishyRating) - mean(subset(x, OdorType == \"SameNostril\")$FishyRating)  ))\nleftDifference$Nostril <- \"Left\"\nrightDifference$Nostril <- \"Right\"\n\nggplot(leftDifference, aes(x = AvgAntagAlone, y = TotalBlock, colour = factor(Subject))) +\n  geom_point()\n\nggplot(rightDifference, aes(x = AvgAntagAlone, y = TotalBlock, colour = factor(Subject))) +\n  geom_point()\n#there is a trend for sure\n\n#normalize to rating of intensity per block per person per nostril\ndiffNormByAntag <- rbind(leftDifference, rightDifference)\ndiffNormByAntag$CentralBlockNorm <- diffNormByAntag$CentralBlock/diffNormByAntag$AvgAntagAlone\ndiffNormByAntag$PeripheralBlockNorm <- diffNormByAntag$PeripheralBlock/diffNormByAntag$AvgAntagAlone\ndiffNormByAntag$TotalBlockNorm <- diffNormByAntag$TotalBlock/diffNormByAntag$AvgAntagAlone\n\n#melt for ploting\ndiffNormByAntag.melt <- melt(diffNormByAntag, c(\"Subject\", \"Running.Block.\", \"Nostril\"))\n#get rid of the two outlier subjects\ndiffNormByAntag.melt <- subset(diffNormByAntag.melt, Subject !=2 & Subject != 8)\nggplot(data  = subset(diffNormByAntag.melt, variable %in% c(\"CentralBlockNorm\", \"PeripheralBlockNorm\", \"TotalBlockNorm\")), aes(x = variable, y = value, colour = Running.Block.)) +\n  geom_point() +\n  facet_grid(Subject~Nostril)\n\n#pdf(\"normalizedbyantagonist.pdf\")\nggplot(data  = subset(diffNormByAntag.melt, variable %in% c(\"CentralBlockNorm\", \"PeripheralBlockNorm\", \"TotalBlockNorm\")), aes(x = variable, y = value, colour = Running.Block.)) +\n  geom_boxplot() +\n  facet_grid(Nostril~.)\n#dev.off()\n\n##############################################\n#I could try the same thing, but with actually normalizing the data first... \n# relabeled.norm <- ddply(df.relabeled, .variables = c(\"Subject\", \"RightNostril\"), transform, FishyRatingNorm = scale(FishyRating), AntagRatingNorm = scale(AntagRating))\n# \n# leftDifference <- ddply(.data = subset(relabeled.norm, LeftNostril == \"1\"), .variables = c(\"Subject\", \"Running.Block.\"), function(x) c(CentralBlock = mean(subset(x, OdorType == \"TMAAlone\")$FishyRatingNorm) - mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRatingNorm), PeripheralBlock = mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRatingNorm) - mean(subset(x, OdorType == \"SameNostril\")$FishyRatingNorm), AvgAntagAlone = mean(subset(x, OdorType == \"AntagAlone\")$AntagRatingNorm), TotalBlock = mean(subset(x, OdorType == \"TMAAlone\")$FishyRatingNorm) - mean(subset(x, OdorType == \"SameNostril\")$FishyRatingNorm)  ))\n# rightDifference <- ddply(.data = subset(relabeled.norm, RightNostril == \"1\"), .variables = c(\"Subject\", \"Running.Block.\"), function(x) c(CentralBlock = mean(subset(x, OdorType == \"TMAAlone\")$FishyRatingNorm) - mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRatingNorm), PeripheralBlock = mean(subset(x, OdorType == \"DifferentNostrils\")$FishyRatingNorm) - mean(subset(x, OdorType == \"SameNostril\")$FishyRatingNorm), AvgAntagAlone = mean(subset(x, OdorType == \"AntagAlone\")$AntagRatingNorm), TotalBlock = mean(subset(x, OdorType == \"TMAAlone\")$FishyRatingNorm) - mean(subset(x, OdorType == \"SameNostril\")$FishyRatingNorm)  ))\n# leftDifference$Nostril <- \"Left\"\n# rightDifference$Nostril <- \"Right\"\n# \n# ggplot(leftDifference, aes(x = AvgAntagAlone, y = TotalBlock, colour = factor(Subject))) +\n#   geom_point()\n# \n# ggplot(rightDifference, aes(x = AvgAntagAlone, y = TotalBlock, colour = factor(Subject))) +\n#   geom_point()\n\n#then used the code from right above to plot it, but it didn't relaly help at all - the data is even more variable than the other method of normalization\n##########################\n\n#get rid of all the useless data\n\n",
    "created" : 1467919600446.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3483223689",
    "id" : "DC95B76E",
    "lastKnownWriteTime" : 1459976082,
    "path" : "/Volumes/storage/mainland/Projects/TMA blocker/Split Nostril Study/Setup2-Olfactometer/Code/SplitNostrilSetup2/real_data_analysis.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}